<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.rk.course.dao.CourseDaoImplTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2016-08-25T09:04:32" hostname="IN-HSI10" time="0.039">
  <properties/>
  <testcase name="testGetCoursesWithId" classname="com.rk.course.dao.CourseDaoImplTest" time="0.018"/>
  <testcase name="testDeleteCourse" classname="com.rk.course.dao.CourseDaoImplTest" time="0.008"/>
  <testcase name="testGetCourseDetails" classname="com.rk.course.dao.CourseDaoImplTest" time="0.005"/>
  <testcase name="test" classname="com.rk.course.dao.CourseDaoImplTest" time="0.005"/>
  <system-out><![CDATA[***********************Table Created***********
Hibernate: insert into COURSE (CID, CCREDITS, CNAME, CTIME, CWEEKNAME) values (default, ?, ?, ?, ?)
Hibernate: insert into COURSE (CID, CCREDITS, CNAME, CTIME, CWEEKNAME) values (default, ?, ?, ?, ?)
Hibernate: insert into STUDENT (SID, SEMAIL, SNAME) values (default, ?, ?)
Hibernate: insert into STUDENT (SID, SEMAIL, SNAME) values (default, ?, ?)
Hibernate: select student0_.SID as SID6_, student0_.SEMAIL as SEMAIL6_, student0_.SNAME as SNAME6_ from STUDENT student0_
Hibernate: select courses0_.SID as SID6_1_, courses0_.CID as CID1_, course1_.CID as CID5_0_, course1_.CCREDITS as CCREDITS5_0_, course1_.CNAME as CNAME5_0_, course1_.CTIME as CTIME5_0_, course1_.CWEEKNAME as CWEEKNAME5_0_ from COURSE_REG courses0_ inner join COURSE course1_ on courses0_.CID=course1_.CID where courses0_.SID=?
Hibernate: select course0_.CID as CID5_, course0_.CCREDITS as CCREDITS5_, course0_.CNAME as CNAME5_, course0_.CTIME as CTIME5_, course0_.CWEEKNAME as CWEEKNAME5_ from COURSE course0_
Hibernate: select students0_.CID as CID5_1_, students0_.SID as SID1_, student1_.SID as SID6_0_, student1_.SEMAIL as SEMAIL6_0_, student1_.SNAME as SNAME6_0_ from COURSE_REG students0_ inner join STUDENT student1_ on students0_.SID=student1_.SID where students0_.CID=?
Hibernate: insert into COURSE (CID, CCREDITS, CNAME, CTIME, CWEEKNAME) values (default, ?, ?, ?, ?)
Hibernate: insert into COURSE (CID, CCREDITS, CNAME, CTIME, CWEEKNAME) values (default, ?, ?, ?, ?)
Hibernate: insert into STUDENT (SID, SEMAIL, SNAME) values (default, ?, ?)
Hibernate: insert into STUDENT (SID, SEMAIL, SNAME) values (default, ?, ?)
Hibernate: select student0_.SID as SID6_, student0_.SEMAIL as SEMAIL6_, student0_.SNAME as SNAME6_ from STUDENT student0_
Hibernate: select courses0_.SID as SID6_1_, courses0_.CID as CID1_, course1_.CID as CID5_0_, course1_.CCREDITS as CCREDITS5_0_, course1_.CNAME as CNAME5_0_, course1_.CTIME as CTIME5_0_, course1_.CWEEKNAME as CWEEKNAME5_0_ from COURSE_REG courses0_ inner join COURSE course1_ on courses0_.CID=course1_.CID where courses0_.SID=?
Hibernate: select course0_.CID as CID5_, course0_.CCREDITS as CCREDITS5_, course0_.CNAME as CNAME5_, course0_.CTIME as CTIME5_, course0_.CWEEKNAME as CWEEKNAME5_ from COURSE course0_
Hibernate: select students0_.CID as CID5_1_, students0_.SID as SID1_, student1_.SID as SID6_0_, student1_.SEMAIL as SEMAIL6_0_, student1_.SNAME as SNAME6_0_ from COURSE_REG students0_ inner join STUDENT student1_ on students0_.SID=student1_.SID where students0_.CID=?
Hibernate: select course0_.CID as CID5_, course0_.CCREDITS as CCREDITS5_, course0_.CNAME as CNAME5_, course0_.CTIME as CTIME5_, course0_.CWEEKNAME as CWEEKNAME5_ from COURSE course0_
Hibernate: insert into COURSE (CID, CCREDITS, CNAME, CTIME, CWEEKNAME) values (default, ?, ?, ?, ?)
Hibernate: insert into COURSE (CID, CCREDITS, CNAME, CTIME, CWEEKNAME) values (default, ?, ?, ?, ?)
Hibernate: insert into STUDENT (SID, SEMAIL, SNAME) values (default, ?, ?)
Hibernate: insert into STUDENT (SID, SEMAIL, SNAME) values (default, ?, ?)
Hibernate: select student0_.SID as SID6_, student0_.SEMAIL as SEMAIL6_, student0_.SNAME as SNAME6_ from STUDENT student0_
Hibernate: select courses0_.SID as SID6_1_, courses0_.CID as CID1_, course1_.CID as CID5_0_, course1_.CCREDITS as CCREDITS5_0_, course1_.CNAME as CNAME5_0_, course1_.CTIME as CTIME5_0_, course1_.CWEEKNAME as CWEEKNAME5_0_ from COURSE_REG courses0_ inner join COURSE course1_ on courses0_.CID=course1_.CID where courses0_.SID=?
Hibernate: select course0_.CID as CID5_, course0_.CCREDITS as CCREDITS5_, course0_.CNAME as CNAME5_, course0_.CTIME as CTIME5_, course0_.CWEEKNAME as CWEEKNAME5_ from COURSE course0_
Hibernate: select students0_.CID as CID5_1_, students0_.SID as SID1_, student1_.SID as SID6_0_, student1_.SEMAIL as SEMAIL6_0_, student1_.SNAME as SNAME6_0_ from COURSE_REG students0_ inner join STUDENT student1_ on students0_.SID=student1_.SID where students0_.CID=?
Hibernate: select course0_.CID as CID5_, course0_.CCREDITS as CCREDITS5_, course0_.CNAME as CNAME5_, course0_.CTIME as CTIME5_, course0_.CWEEKNAME as CWEEKNAME5_ from COURSE course0_
Hibernate: insert into COURSE (CID, CCREDITS, CNAME, CTIME, CWEEKNAME) values (default, ?, ?, ?, ?)
Hibernate: insert into COURSE (CID, CCREDITS, CNAME, CTIME, CWEEKNAME) values (default, ?, ?, ?, ?)
Hibernate: insert into STUDENT (SID, SEMAIL, SNAME) values (default, ?, ?)
Hibernate: insert into STUDENT (SID, SEMAIL, SNAME) values (default, ?, ?)
Hibernate: select student0_.SID as SID6_, student0_.SEMAIL as SEMAIL6_, student0_.SNAME as SNAME6_ from STUDENT student0_
Hibernate: select courses0_.SID as SID6_1_, courses0_.CID as CID1_, course1_.CID as CID5_0_, course1_.CCREDITS as CCREDITS5_0_, course1_.CNAME as CNAME5_0_, course1_.CTIME as CTIME5_0_, course1_.CWEEKNAME as CWEEKNAME5_0_ from COURSE_REG courses0_ inner join COURSE course1_ on courses0_.CID=course1_.CID where courses0_.SID=?
Hibernate: select course0_.CID as CID5_, course0_.CCREDITS as CCREDITS5_, course0_.CNAME as CNAME5_, course0_.CTIME as CTIME5_, course0_.CWEEKNAME as CWEEKNAME5_ from COURSE course0_
Hibernate: select students0_.CID as CID5_1_, students0_.SID as SID1_, student1_.SID as SID6_0_, student1_.SEMAIL as SEMAIL6_0_, student1_.SNAME as SNAME6_0_ from COURSE_REG students0_ inner join STUDENT student1_ on students0_.SID=student1_.SID where students0_.CID=?
]]></system-out>
  <system-err><![CDATA[[Test worker] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[Test worker] INFO org.springframework.test.context.support.DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@10d4be12, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3d9e4c68, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7fab0cca, org.springframework.test.context.transaction.TransactionalTestExecutionListener@41858522, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7494972e]
[Test worker] INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [spring-module.xml]
[Test worker] INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [config/spring/dataSource.xml]
[Test worker] INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [config/spring/HibernateSessionFactory.xml]
[Test worker] INFO org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@5f680982: startup date [Thu Aug 25 14:34:32 IST 2016]; root of context hierarchy
[Test worker] INFO org.springframework.jdbc.datasource.DriverManagerDataSource - Loaded JDBC driver: org.hsqldb.jdbcDriver
[Test worker] INFO org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.rk.dto.Course
[Test worker] INFO org.hibernate.cfg.annotations.EntityBinder - Bind entity com.rk.dto.Course on table COURSE
[Test worker] INFO org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.rk.dto.Student
[Test worker] INFO org.hibernate.cfg.annotations.EntityBinder - Bind entity com.rk.dto.Student on table STUDENT
[Test worker] INFO org.hibernate.cfg.Configuration - Hibernate Validator not found: ignoring
[Test worker] INFO org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean - Building new Hibernate SessionFactory
[Test worker] INFO org.hibernate.cfg.search.HibernateSearchEventListenerRegister - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
[Test worker] INFO org.hibernate.connection.ConnectionProviderFactory - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
[Test worker] INFO org.hibernate.dialect.Dialect - Using dialect: org.hibernate.dialect.HSQLDialect
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
[Test worker] INFO org.hibernate.transaction.TransactionFactoryFactory - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[Test worker] INFO org.hibernate.transaction.TransactionManagerLookupFactory - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
[Test worker] INFO org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Connection release mode: auto
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[Test worker] INFO org.hibernate.hql.ast.ASTQueryTranslatorFactory - Using ASTQueryTranslatorFactory
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
[Test worker] INFO org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Query cache: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Echoing all SQL to stdout
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Statistics: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Named query checking : enabled
[Test worker] INFO org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[Test worker] INFO org.hibernate.impl.SessionFactoryImpl - building session factory
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@3a919905
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@720f4811
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [blob] overrides previous : org.hibernate.type.BlobType@2d819c6e
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@2d819c6e
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@72202bd2
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [clob] overrides previous : org.hibernate.type.ClobType@444fdd22
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@444fdd22
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@4c084a7a
[Test worker] INFO org.hibernate.type.BasicTypeRegistry - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@6dcbdd79
[Test worker] INFO org.hibernate.impl.SessionFactoryObjectFactory - Not binding factory to JNDI, no JNDI name configured
[Test worker] INFO org.springframework.orm.hibernate3.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@e6d550e] of Hibernate SessionFactory for HibernateTransactionManager
[Test worker] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b3f16ab testClass = CourseDaoImplTest, testInstance = com.rk.course.dao.CourseDaoImplTest@2cb6e738, testMethod = testGetCoursesWithId@CourseDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@af715eb testClass = CourseDaoImplTest, locations = '{classpath:spring-module.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@9840b83]; rollback [true]
[Test worker] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@6b3f16ab testClass = CourseDaoImplTest, testInstance = com.rk.course.dao.CourseDaoImplTest@2cb6e738, testMethod = testGetCoursesWithId@CourseDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@af715eb testClass = CourseDaoImplTest, locations = '{classpath:spring-module.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
[Test worker] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b3f16ab testClass = CourseDaoImplTest, testInstance = com.rk.course.dao.CourseDaoImplTest@4518b195, testMethod = testDeleteCourse@CourseDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@af715eb testClass = CourseDaoImplTest, locations = '{classpath:spring-module.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@9840b83]; rollback [true]
[Test worker] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@6b3f16ab testClass = CourseDaoImplTest, testInstance = com.rk.course.dao.CourseDaoImplTest@4518b195, testMethod = testDeleteCourse@CourseDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@af715eb testClass = CourseDaoImplTest, locations = '{classpath:spring-module.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
[Test worker] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b3f16ab testClass = CourseDaoImplTest, testInstance = com.rk.course.dao.CourseDaoImplTest@511fd3b7, testMethod = testGetCourseDetails@CourseDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@af715eb testClass = CourseDaoImplTest, locations = '{classpath:spring-module.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@9840b83]; rollback [true]
[Test worker] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@6b3f16ab testClass = CourseDaoImplTest, testInstance = com.rk.course.dao.CourseDaoImplTest@511fd3b7, testMethod = testGetCourseDetails@CourseDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@af715eb testClass = CourseDaoImplTest, locations = '{classpath:spring-module.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
[Test worker] INFO org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6b3f16ab testClass = CourseDaoImplTest, testInstance = com.rk.course.dao.CourseDaoImplTest@3e4fca16, testMethod = test@CommonTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@af715eb testClass = CourseDaoImplTest, locations = '{classpath:spring-module.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@9840b83]; rollback [true]
[Test worker] INFO org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@6b3f16ab testClass = CourseDaoImplTest, testInstance = com.rk.course.dao.CourseDaoImplTest@3e4fca16, testMethod = test@CommonTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@af715eb testClass = CourseDaoImplTest, locations = '{classpath:spring-module.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
]]></system-err>
</testsuite>
